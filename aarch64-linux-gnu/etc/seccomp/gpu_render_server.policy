# Copyright 2021 The Chromium OS Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.


brk: 1
clock_gettime: 1
close: 1
dup3: 1
dup: 1
epoll_create1: 1
epoll_ctl: 1
epoll_pwait: 1
eventfd2: 1
exit: 1
exit_group: 1
futex: 1
getcwd: 1
getpid: 1
gettid: 1
gettimeofday: 1
io_uring_setup: 1
io_uring_enter: 1
kill: 1
madvise: arg2 == MADV_DONTNEED || arg2 == MADV_DONTDUMP || arg2 == MADV_REMOVE
mremap: 1
munmap: 1
nanosleep: 1
clock_nanosleep: 1
pipe2: 1
ppoll: 1
read: 1
readlinkat: 1
readv: 1
recvfrom: 1
recvmsg: 1
restart_syscall: 1
rt_sigaction: 1
rt_sigprocmask: 1
rt_sigreturn: 1
sched_getaffinity: 1
sched_yield: 1
sendmsg: 1
sendto: 1
set_robust_list: 1
sigaltstack: 1
write: 1
writev: 1
uname: 1

getsockopt: 1
shutdown: 1

connect: 1
getrandom: 1
lseek: 1
ftruncate: 1
statx: 1
fstat: 1
newfstatat: 1
getdents64: 1
sysinfo: 1
fstatfs: 1
prctl: arg0 == PR_SET_NAME || arg0 == PR_GET_NAME

ioctl: arg1 & 0x6400 || arg1 & 0x8000 || arg1 == 0x40086200 || arg1 == 0x40087543

memfd_create: arg1 == 3

mmap: arg2 == PROT_READ|PROT_WRITE || arg2 == PROT_NONE || arg2 == PROT_READ|PROT_EXEC || arg2 == PROT_WRITE || arg2 == PROT_READ
mprotect: arg2 == PROT_READ|PROT_WRITE || arg2 == PROT_NONE || arg2 == PROT_READ
openat: 1

geteuid: 1
getuid: 1
fcntl: 1
tgkill: 1

sched_setscheduler: 1
sched_setaffinity: 1
kcmp: 1

faccessat: 1
faccessat2: 1
getgid: 1
getegid: 1

# allow fork() and waitid()
clone: 1
waitid: 1

# allow SOCK_STREAM and SOCK_DGRAM (syslog)
socket: arg0 == AF_UNIX && arg2 == 0

# allow socketpair(AF_UNIX, SOCK_SEQPACKET | SOCK_CLOEXEC)
socketpair: arg0 == AF_UNIX && arg1 == SOCK_SEQPACKET|SOCK_CLOEXEC && arg2 == 0

# allow signalfd()
signalfd4: 1
clone3: 1
rseq: 1
